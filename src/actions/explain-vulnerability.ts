'use server';

import '@/ai/flows/explain-vulnerability-risk';
import {
  explainVulnerabilityRisk,
} from '@/ai/flows/explain-vulnerability-risk';
import type { ExplainVulnerabilityRiskOutput } from '@/ai/types';
import type { Host } from '@/types/nmap';
import { getLocale } from 'next-intl/server';

export async function getVulnerabilityExplanation(
  host: Host,
  rankingFactors: string
): Promise<ExplainVulnerabilityRiskOutput> {
  try {
    const locale = await getLocale();
    const hostDetails = JSON.stringify(
      {
        ip: host.address.addr,
        status: host.status.state,
        ports: host.ports,
        hostscript: host.hostscript,
      },
      null,
      2
    );

    const result = await explainVulnerabilityRisk({
      hostDetails,
      rankingFactors,
      riskScore: host.riskScore ?? 0,
      locale,
    });

    return result;
  } catch (error) {
    console.error('Error getting vulnerability explanation:', error);
    throw new Error('Failed to generate vulnerability explanation from AI model.');
  }
}
