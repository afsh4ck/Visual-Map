'use server';

import { ai } from '@/ai/genkit';
import type { Host } from '@/types/nmap';
import { getLocale } from 'next-intl/server';
import { z } from 'genkit';

// Flow logic is now defined directly in the server action file

const PentestingNextStepsInputSchema = z.object({
  hostDetails: z
    .string()
    .describe(
      'Detailed information about the host, including open ports, services, versions, and NSE script results.'
    ),
  locale: z
    .string()
    .describe('The language to use for the explanation. Can be "en" or "es".'),
});
export type PentestingNextStepsInput = z.infer<
  typeof PentestingNextStepsInputSchema
>;

const StepSchema = z.object({
  title: z.string().describe('A descriptive title for the pentesting step.'),
  description: z
    .string()
    .describe('A clear explanation of what the step is and why it is useful.'),
  command: z
    .string()
    .optional()
    .describe(
      "A specific, copy-pasteable command to execute the step. Use placeholders like <target_ip> where necessary, but replace it with the host's actual IP from the input `hostDetails`."
    ),
});

const PentestingNextStepsOutputSchema = z.object({
  steps: z
    .array(StepSchema)
    .describe('An array of suggested pentesting steps.'),
});
export type PentestingNextStepsOutput = z.infer<
  typeof PentestingNextStepsOutputSchema
>;

const prompt = ai.definePrompt({
  name: 'pentestingNextStepsPrompt',
  input: { schema: PentestingNextStepsInputSchema },
  output: { schema: PentestingNextStepsOutputSchema },
  prompt: `You are a world-class cybersecurity expert and senior penetration tester. Your task is to provide a list of actionable next steps for a penetration test based on the provided Nmap scan results for a specific host.

Respond in this language: {{{locale}}}.

The steps should be clear, concise, and directly relevant to the discovered open ports, services, and potential vulnerabilities. For each step, provide a specific command that can be copied and pasted into a terminal. The command must be ready to use, so you MUST replace any placeholder for the target IP with the actual IP address found in the hostDetails JSON.

Analyze the provided host details and generate a list of practical next steps.

Host Details:
\`\`\`json
{{{hostDetails}}}
\`\`\`

Here are some examples of what you could suggest:
- If an HTTP server is running, suggest running a web vulnerability scanner like Nuclei.
- If a database port is open, suggest attempting to connect with default credentials.
- If SSH is open, suggest brute-forcing weak credentials with Hydra.
- If SMB is open, suggest enumerating shares with smbclient or checking for vulnerabilities like EternalBlue.
- Suggest running more targeted Nmap scripts for specific services.

Your output must be a well-structured list of steps. Focus on quality over quantity. Provide between 3 to 5 highly relevant steps.
`,
});

const pentestingNextStepsFlow = ai.defineFlow(
  {
    name: 'pentestingNextStepsFlow',
    inputSchema: PentestingNextStepsInputSchema,
    outputSchema: PentestingNextStepsOutputSchema,
  },
  async (input) => {
    const { output } = await prompt(input);
    return output!;
  }
);

// The server action function
export async function getPentestingNextSteps(
  host: Host
): Promise<PentestingNextStepsOutput> {
  try {
    const locale = await getLocale();
    const hostDetails = JSON.stringify(
      {
        ip: host.address.addr,
        status: host.status.state,
        ports: host.ports,
        hostscript: host.hostscript,
      },
      null,
      2
    );

    const result = await pentestingNextStepsFlow({
      hostDetails,
      locale,
    });

    return result;
  } catch (error) {
    console.error('Error getting pentesting next steps:', error);
    throw new Error('Failed to generate pentesting next steps from AI model.');
  }
}
